---
import Header from "../../components/Header.astro";
import Base from "../../layouts/Base.astro";
import Footer from "../../components/Footer.astro";
import Card from "../../components/Card.astro";
import { getOffres } from "../../backend.mjs";
import { prerender } from "./[surface].astro";
import { filterByPrix } from "../../backend.mjs";

const offres = await getOffres();

export const prerender = false;

let message = "";
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix") as string);
    const maxPrix = parseInt(data.get("maxPrix") as string);

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        let Offres = await filterByPrix(minPrix, maxPrix);
        if (Offres.length === 0) {
            message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
        } else {
            message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`;
        }
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
    }
} else {
    let Offres = await getOffres();
}
---

<Base titre="Accueil">
    <a
        class="hover:text-lime-500 px-4 py-2 bg-blue-500 text-white rounded-lg transition duration-200 ease-in-out hover:bg-blue-600"
        href="/offres/add">Ajouter une maison</a
    >

    <h1 class="text-5xl text-center font-serif h-36 mt-4">Offres</h1>

    <form
        action="/offres"
        method="POST"
        class="flex flex-col items-center space-y-4 mt-6"
    >
        <input
            class="p-2 border rounded-lg w-64"
            type="number"
            name="minPrix"
            placeholder="Prix minimum"
        />
        <input
            class="p-2 border rounded-lg w-64"
            type="number"
            name="maxPrix"
            placeholder="Prix maximum"
        />
        <input
            class="px-4 py-2 bg-green-500 text-white rounded-lg cursor-pointer transition hover:bg-green-600"
            type="submit"
            value="Filtrer par prix"
        />
    </form>

    <div x-data="{ showFavorites: false, open:'open'}" class="mt-6">
        <button
            @click="showFavorites=!showFavorites"
            class="px-4 py-2 bg-gray-500 text-white rounded-lg transition hover:bg-gray-600"
        >
            <span x-show="!showFavorites">Afficher les favoris</span>
            <span x-show="showFavorites">Afficher tout</span>
        </button>

        <button
            x-on:click="open = ! open"
            class="ml-4 px-4 py-2 bg-purple-500 text-white rounded-lg transition hover:bg-purple-600"
            >Toggle Dropdown</button
        >
        <div
            :class="open ? '' : 'hidden'"
            class="mt-2 p-4 bg-gray-100 rounded-lg shadow-md"
        >
            Dropdown Contents...
        </div>

        <div x-show="!showFavorites" class="grid grid-cols-3 gap-6 p-5">
            {offres.map((offre) => <Card {...offre} />)}
        </div>
        <div x-show="showFavorites" class="grid grid-cols-3 gap-6 p-5">
            {offres.map((offre) => offre.favori && <Card {...offre} />)}
        </div>
    </div>
</Base>
